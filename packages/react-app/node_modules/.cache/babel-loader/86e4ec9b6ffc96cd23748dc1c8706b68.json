{"ast":null,"code":"var _jsxFileName = \"/Users/loe/Quant/project_web3_uniswap/packages/react-app/src/components/Exchange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { abis } from \"@my-app/contracts\";\nimport { ERC20, useContractFunction, useEthers, useTokenAllowance, useTokenBalance } from \"@usedapp/core\";\nimport { ethers } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { getAvailableTokens, getCounterpartTokens, findPoolByTokens, isOperationPending, getFailureMessage, getSuccessMessage } from '../utils';\nimport { ROUTER_ADDRESS } from \"../config\";\nimport AmountIn from \"./AmountIn\";\nimport AmountOut from \"./AmountOut\";\nimport Balance from \"./Balance\";\nimport styles from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exchange = _ref => {\n  _s();\n\n  var _findPoolByTokens$add, _findPoolByTokens;\n\n  let {\n    pools\n  } = _ref;\n  const {\n    account\n  } = useEthers();\n  const [fromValue, setFromValue] = useState(\"0\");\n  const [fromToken, setFromToken] = useState(pools[0].token0Address); // initialFromToken\n\n  const [toToken, setToToken] = useState(\"\");\n  const [resetState, setResetState] = useState(false);\n  const fromValueBigNumber = parseUnits(fromValue || \"0\"); // converse the string to bigNumber\n\n  const availableTokens = getAvailableTokens(pools);\n  const counterpartTokens = getCounterpartTokens(pools, fromToken);\n  const pairAddress = (_findPoolByTokens$add = (_findPoolByTokens = findPoolByTokens(pools, fromToken, toToken)) === null || _findPoolByTokens === void 0 ? void 0 : _findPoolByTokens.address) !== null && _findPoolByTokens$add !== void 0 ? _findPoolByTokens$add : \"\";\n  const routerContract = new Contract(ROUTER_ADDRESS, abis.router02);\n  const fromTokenContract = new Contract(fromToken, ERC20.abi);\n  const fromTokenBalance = useTokenBalance(fromToken, account);\n  const toTokenBalance = useTokenBalance(toToken, account);\n  const tokenAllowance = useTokenAllowance(fromToken, account, ROUTER_ADDRESS) || parseUnits(\"0\");\n  const approvedNeeded = fromValueBigNumber.gt(tokenAllowance);\n  const formValueIsGreaterThan0 = fromValueBigNumber.gt(parseUnits(\"0\"));\n  const hasEnoughBalance = fromValueBigNumber.lte(fromTokenBalance !== null && fromTokenBalance !== void 0 ? fromTokenBalance : parseUnits(\"0\")); // approve initiating a contract call (similar to use state) -> gives the state and the sender...\n\n  const {\n    state: swapApproveState,\n    send: swapApproveSend\n  } = useContractFunction(fromTokenContract, \"approve\", {\n    transactionName: \"onApproveRequested\",\n    gasLimitBufferPercentage: 10\n  }); // swap initiating a contract call (similar to use state) -> gives the state and the sender...\n\n  const {\n    state: swapExecuteState,\n    send: swapExecuteSend\n  } = useContractFunction(routerContract, \"swapExactTokensForTokens\", {\n    transactionName: \"swapExactTokensForTokens\",\n    gasLimitBufferPercentage: 10\n  });\n  const isApproving = isOperationPending(swapApproveState);\n  const isSwapping = isOperationPending(swapExecuteState);\n  const canApprove = !isApproving && approvedNeeded;\n  const canSwap = !approvedNeeded && !isSwapping && formValueIsGreaterThan0 && hasEnoughBalance;\n  const successMessage = getSuccessMessage(swapApproveState, swapExecuteState);\n  const failureMessage = getFailureMessage(swapApproveState, swapExecuteState);\n\n  const onApproveRequested = () => {\n    swapApproveSend(ROUTER_ADDRESS, ethers.constants.MaxUint256);\n  }; // https://docs.uniswap.org/protocol/V2/reference/smart-contracts/router-02#swapexacttokensfortokens\n\n\n  const onSwapRequested = () => {\n    swapExecuteSend(fromValueBigNumber, 0, [fromToken, toToken], account, Math.floor(Date.now() / 1000) + 60 * 20).then(_ => {\n      setFromValue(\"0\");\n    });\n  };\n\n  const onFromValueChange = value => {\n    const trimmedValue = value.trim();\n\n    try {\n      trimmedValue && parseUnits(value);\n      setFromValue(value);\n    } catch (e) {}\n  };\n\n  const onFromTokenChange = value => {\n    setFromToken(value);\n  };\n\n  const onToTokenChange = value => {\n    setToToken(value);\n  };\n\n  useEffect(() => {\n    if (failureMessage || successMessage) {\n      setTimeout(() => {\n        setResetState(true);\n        setFromValue(\"0\");\n        setToToken(\"\");\n      }, 5000);\n    }\n  }, [failureMessage, successMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(AmountIn, {\n        value: fromValue,\n        onChange: onFromValueChange,\n        currencyValue: fromToken,\n        onSelect: onFromTokenChange,\n        currencies: availableTokens,\n        isSwapping: isSwapping && hasEnoughBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        tokenBalance: fromTokenBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 w-[100%]\",\n      children: [/*#__PURE__*/_jsxDEV(AmountOut, {\n        fromToken: fromToken,\n        toToken: toToken,\n        amountIn: fromValueBigNumber,\n        pairContract: pairAddress,\n        currencyValue: toToken,\n        onSelect: onToTokenChange,\n        currencies: counterpartTokens\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        tokenBalance: toTokenBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), approvedNeeded && !isSwapping ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !canApprove,\n      onClick: onApproveRequested,\n      className: `${canApprove ? \"bg-site-pink text-white\" : \"bg-site-dim2 text-site-dim2\"} ${styles.actionButton}`,\n      children: isApproving ? \"Approving...\" : \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !canSwap,\n      onClick: onSwapRequested,\n      className: `${canSwap ? \"bg-site-pink text-white\" : \"bg-site-dim2 text-site-dim2\"} ${styles.actionButton}`,\n      children: isSwapping ? \"Swapping...\" : hasEnoughBalance ? \"Swap\" : \"Insufficient balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), failureMessage && !resetState ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: failureMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this) : successMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Exchange, \"KgDxUCAbK5W/TyAffIvFbwIddII=\", false, function () {\n  return [useEthers, useTokenBalance, useTokenBalance, useTokenAllowance, useContractFunction, useContractFunction];\n});\n\n_c = Exchange;\nexport default Exchange;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchange\");","map":{"version":3,"names":["React","useEffect","useState","Contract","abis","ERC20","useContractFunction","useEthers","useTokenAllowance","useTokenBalance","ethers","parseUnits","getAvailableTokens","getCounterpartTokens","findPoolByTokens","isOperationPending","getFailureMessage","getSuccessMessage","ROUTER_ADDRESS","AmountIn","AmountOut","Balance","styles","Exchange","pools","account","fromValue","setFromValue","fromToken","setFromToken","token0Address","toToken","setToToken","resetState","setResetState","fromValueBigNumber","availableTokens","counterpartTokens","pairAddress","address","routerContract","router02","fromTokenContract","abi","fromTokenBalance","toTokenBalance","tokenAllowance","approvedNeeded","gt","formValueIsGreaterThan0","hasEnoughBalance","lte","state","swapApproveState","send","swapApproveSend","transactionName","gasLimitBufferPercentage","swapExecuteState","swapExecuteSend","isApproving","isSwapping","canApprove","canSwap","successMessage","failureMessage","onApproveRequested","constants","MaxUint256","onSwapRequested","Math","floor","Date","now","then","_","onFromValueChange","value","trimmedValue","trim","e","onFromTokenChange","onToTokenChange","setTimeout","actionButton","message"],"sources":["/Users/loe/Quant/project_web3_uniswap/packages/react-app/src/components/Exchange.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { abis } from \"@my-app/contracts\";\nimport { ERC20, useContractFunction, useEthers, useTokenAllowance, useTokenBalance } from \"@usedapp/core\";\nimport { ethers } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\n\nimport  { getAvailableTokens, getCounterpartTokens, findPoolByTokens, isOperationPending, getFailureMessage, getSuccessMessage } from '../utils';\nimport { ROUTER_ADDRESS } from \"../config\";\nimport AmountIn from \"./AmountIn\";\nimport AmountOut from \"./AmountOut\";\nimport Balance from \"./Balance\";\nimport styles from \"../styles\";\n\nconst Exchange = ({ pools }) => {\n  const { account } = useEthers();\n  const [fromValue, setFromValue] = useState(\"0\");\n  const [fromToken, setFromToken] = useState(pools[0].token0Address); // initialFromToken\n  const [toToken, setToToken] = useState(\"\");\n  const [resetState, setResetState] = useState(false)\n\n  const fromValueBigNumber = parseUnits(fromValue || \"0\"); // converse the string to bigNumber\n  const availableTokens = getAvailableTokens(pools);\n  const counterpartTokens = getCounterpartTokens(pools, fromToken);\n  const pairAddress = findPoolByTokens(pools, fromToken, toToken)?.address ?? \"\";\n\n  const routerContract = new Contract(ROUTER_ADDRESS, abis.router02);\n  const fromTokenContract = new Contract(fromToken, ERC20.abi);\n  const fromTokenBalance = useTokenBalance(fromToken, account);\n  const toTokenBalance = useTokenBalance(toToken, account);\n  const tokenAllowance = useTokenAllowance(fromToken, account, ROUTER_ADDRESS) || parseUnits(\"0\");\n  const approvedNeeded = fromValueBigNumber.gt(tokenAllowance);\n  const formValueIsGreaterThan0 = fromValueBigNumber.gt(parseUnits(\"0\"));\n  const hasEnoughBalance = fromValueBigNumber.lte(fromTokenBalance ?? parseUnits(\"0\"));\n\n  // approve initiating a contract call (similar to use state) -> gives the state and the sender...\n  const { state: swapApproveState, send: swapApproveSend } =\n    useContractFunction(fromTokenContract, \"approve\", {\n      transactionName: \"onApproveRequested\",\n      gasLimitBufferPercentage: 10,\n    });\n  // swap initiating a contract call (similar to use state) -> gives the state and the sender...\n  const { state: swapExecuteState, send: swapExecuteSend } =\n    useContractFunction(routerContract, \"swapExactTokensForTokens\", {\n      transactionName: \"swapExactTokensForTokens\",\n      gasLimitBufferPercentage: 10,\n    });\n\n  const isApproving = isOperationPending(swapApproveState);\n  const isSwapping = isOperationPending(swapExecuteState);\n  const canApprove = !isApproving && approvedNeeded;\n  const canSwap = !approvedNeeded && !isSwapping && formValueIsGreaterThan0 && hasEnoughBalance;\n\n  const successMessage = getSuccessMessage(swapApproveState, swapExecuteState);\n  const failureMessage = getFailureMessage(swapApproveState, swapExecuteState);\n\n  const onApproveRequested = () => {\n    swapApproveSend(ROUTER_ADDRESS, ethers.constants.MaxUint256);\n  };\n\n  // https://docs.uniswap.org/protocol/V2/reference/smart-contracts/router-02#swapexacttokensfortokens\n  const onSwapRequested = () => {\n    swapExecuteSend(\n      fromValueBigNumber,\n      0,\n      [fromToken, toToken],\n      account,\n      Math.floor(Date.now() / 1000) + 60 * 20\n    ).then((_) => {\n      setFromValue(\"0\");\n    });\n  };\n\n  const onFromValueChange = (value) => {\n    const trimmedValue = value.trim();\n\n    try {\n      trimmedValue && parseUnits(value);\n      setFromValue(value);\n    } catch (e) {}\n  };\n\n  const onFromTokenChange = (value) => {\n    setFromToken(value);\n  };\n\n  const onToTokenChange = (value) => {\n    setToToken(value);\n  };\n\n  useEffect(() => {\n    if(failureMessage || successMessage) {\n      setTimeout(() => {\n        setResetState(true)\n        setFromValue(\"0\")\n        setToToken(\"\")\n      }, 5000)\n    }\n  }, [failureMessage, successMessage])\n\n  return (\n    <div className=\"flex flex-col w-full items-center\">\n      <div className=\"mb-8\">\n        <AmountIn\n          value={fromValue}\n          onChange={onFromValueChange}\n          currencyValue={fromToken}\n          onSelect={onFromTokenChange}\n          currencies={availableTokens}\n          isSwapping={isSwapping && hasEnoughBalance}\n        />\n        <Balance tokenBalance={fromTokenBalance} />\n      </div>\n\n      <div className=\"mb-8 w-[100%]\">\n        <AmountOut\n          fromToken={fromToken}\n          toToken={toToken}\n          amountIn={fromValueBigNumber}\n          pairContract={pairAddress}\n          currencyValue={toToken}\n          onSelect={onToTokenChange}\n          currencies={counterpartTokens}\n        />\n        <Balance tokenBalance={toTokenBalance} />\n      </div>\n\n      {approvedNeeded && !isSwapping ? (\n        <button\n          disabled={!canApprove}\n          onClick={onApproveRequested}\n          className={`${\n            canApprove\n              ? \"bg-site-pink text-white\"\n              : \"bg-site-dim2 text-site-dim2\"\n          } ${styles.actionButton}`}\n        >\n          {isApproving ? \"Approving...\" : \"Approve\"}\n        </button>\n      ) : (\n        <button\n          disabled={!canSwap}\n          onClick={onSwapRequested}\n          className={`${\n            canSwap ? \"bg-site-pink text-white\" : \"bg-site-dim2 text-site-dim2\"\n          } ${styles.actionButton}`}\n        >\n          {isSwapping\n            ? \"Swapping...\"\n            : hasEnoughBalance\n            ? \"Swap\"\n            : \"Insufficient balance\"}\n        </button>\n      )}\n\n      {failureMessage && !resetState ? (\n        <p className={styles.message}>{failureMessage}</p>\n      ) : successMessage ? (\n        <p className={styles.message}>{successMessage}</p>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Exchange;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}